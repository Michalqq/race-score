{"version":3,"file":"836.js","mappings":"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","sources":["webpack://javascript/./src/components/event/NewEventForm.jsx","webpack://javascript/./src/components/common/EventCard.jsx","webpack://javascript/./src/components/team/TeamListModal.jsx","webpack://javascript/./src/components/join/QuickJoinPanel.jsx","webpack://javascript/./src/components/event/EventModal.jsx","webpack://javascript/./src/components/team/BasicTeamDataForm.jsx","webpack://javascript/./src/components/team/AdminTeamList.jsx","webpack://javascript/./src/components/page/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { InputLabeled } from \"../common/InputLabeled\";\r\nimport { CustomDatePicker, TimePicker } from \"../common/DateInput\";\r\nimport { CalendarContainer } from \"react-datepicker\";\r\nimport { backendUrl } from \"../utils/fetchUtils\";\r\nimport { format } from \"date-fns\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Selector } from \"../common/Selector\";\r\nimport authHeader from \"../../service/auth-header\";\r\nimport { OkCancelModal } from \"../common/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nexport const NewEventForm = ({ show, handleClose, event }) => {\r\n  const [myEvent, setMyEvent] = useState({\r\n    name: \"\",\r\n    description: \"\",\r\n    date: new Date(),\r\n    signDeadline: new Date(),\r\n    admin: 1,\r\n    stages: [],\r\n    organizer: \"\",\r\n    logoPath: \"\",\r\n    awdClassification: false,\r\n    rwdClassification: false,\r\n    fwdClassification: false,\r\n  });\r\n  const [stage, setStage] = useState({\r\n    index: 0,\r\n    name: \"\",\r\n    distance: 1.5,\r\n    startTime: new Date(),\r\n    startFrequency: 1,\r\n  });\r\n  const [eventClass, setEventClass] = useState({\r\n    carClassId: 0,\r\n    carClassName: null,\r\n    maxEngineCapacity: null,\r\n    eventId: event?.eventId,\r\n    awd: false,\r\n  });\r\n  const [eventPaths, setEventPaths] = useState([]);\r\n  const [path, setPath] = useState({\r\n    eventId: event?.eventId,\r\n    path: \"\",\r\n    description: \"\",\r\n  });\r\n  const [eventFiles, setEventFiles] = useState([]);\r\n  const [file, setFile] = useState({\r\n    eventId: event?.eventId,\r\n    file: \"\",\r\n    fileName: \"\",\r\n    description: \"\",\r\n  });\r\n  const [logoFile, setLogoFile] = useState();\r\n  const [stages, setStages] = useState([]);\r\n  const [referee, setReferee] = useState([]);\r\n  const [refereeOptions, setRefereeOptions] = useState([]);\r\n  const [eventClasses, setEventClasses] = useState([]);\r\n  const [eventClassesOptions, setEventClassesOptions] = useState([]);\r\n  const [removeEvent, setRemoveEvent] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!show) return;\r\n\r\n    axios\r\n      .get(`${backendUrl()}/event/getRefereeOptions`, {\r\n        headers: authHeader(),\r\n      })\r\n      .then((res) => {\r\n        setRefereeOptions(res.data);\r\n      });\r\n\r\n    axios\r\n      .get(`${backendUrl()}/event/getEventClassesOptions`, {\r\n        headers: authHeader(),\r\n      })\r\n      .then((res) => {\r\n        setEventClassesOptions(res.data);\r\n      });\r\n\r\n    setEventClasses([]);\r\n    setReferee([]);\r\n    setStages([]);\r\n    if (event !== undefined) fetchEventToEdit();\r\n  }, [show]);\r\n\r\n  const handleChange = (event) => {\r\n    setMyEvent({ ...myEvent, [event.target.name]: event.target.value });\r\n  };\r\n  const handleStageChange = (event) => {\r\n    setStage({ ...stage, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleAccept = () => {\r\n    const data = {\r\n      ...myEvent,\r\n      stages: stages,\r\n      referee: referee,\r\n      eventClasses: eventClasses,\r\n      eventPaths: eventPaths,\r\n      eventFiles: [],\r\n    };\r\n\r\n    axios.put(`${backendUrl()}/event/createNew`, data).then((res) => {\r\n      eventFiles.forEach((f) =>\r\n        axios.post(\r\n          `${backendUrl()}/event/addFileToEvent?fileName=${f.fileName}&desc=${\r\n            f.description\r\n          }&eventId=${res.data}`,\r\n          f.file,\r\n          {\r\n            headers: authHeader(),\r\n          }\r\n        )\r\n      );\r\n      console.log(logoFile);\r\n      if (logoFile)\r\n        axios.post(\r\n          `${backendUrl()}/event/addLogoFile?eventId=${res.data}`,\r\n          logoFile,\r\n          {\r\n            headers: authHeader(),\r\n          }\r\n        );\r\n    });\r\n\r\n    handleClose();\r\n  };\r\n\r\n  const removeFile = (fileId) => {\r\n    if (!fileId) return;\r\n\r\n    axios.post(\r\n      `${backendUrl()}/event/removeFileFromEvent?fileId=${fileId}&eventId=${\r\n        myEvent.eventId\r\n      }`,\r\n      {\r\n        headers: authHeader(),\r\n      }\r\n    );\r\n  };\r\n\r\n  const addStage = () => {\r\n    stages.push(stage);\r\n    setStages(stages);\r\n    setStage({\r\n      index: stage.index + 1,\r\n      name: \"\",\r\n      distance: \"\",\r\n      startTime: new Date(),\r\n      startFrequency: 1,\r\n    });\r\n  };\r\n\r\n  const addClass = () => {\r\n    eventClasses.push(eventClass);\r\n    setEventClass({\r\n      carClassId: 0,\r\n      carClassName: null,\r\n      maxEngineCapacity: \"\",\r\n      eventId: event?.eventId,\r\n      awd: false,\r\n    });\r\n  };\r\n\r\n  const addPath = () => {\r\n    eventPaths.push(path);\r\n    setPath({\r\n      eventId: event?.eventId,\r\n      path: \"\",\r\n      description: \"\",\r\n    });\r\n  };\r\n\r\n  const addFiles = () => {\r\n    eventFiles.push(file);\r\n    setFile({\r\n      eventId: event?.eventId,\r\n      file: \"\",\r\n      fileName: \"\",\r\n      description: \"\",\r\n    });\r\n  };\r\n\r\n  const removeFromStages = (id) => {\r\n    const tempStages = stages.filter((x) => x.index !== id);\r\n    setStages(tempStages);\r\n  };\r\n\r\n  const removeReferee = (id) => {\r\n    const tempRef = referee.filter((x) => x.userId !== id);\r\n    setReferee(tempRef);\r\n  };\r\n\r\n  const removeClass = (id) => {\r\n    const tempClass = eventClasses.filter((x) => x.carClassId !== id);\r\n    setEventClasses(tempClass);\r\n  };\r\n\r\n  const addReferee = (id) => {\r\n    const tempRef = refereeOptions.find((x) => x.value === id);\r\n    const newRef = { userId: Number(tempRef.value), username: tempRef.label };\r\n    setReferee([...referee, newRef]);\r\n  };\r\n\r\n  const addEventClass = (id) => {\r\n    const tempClass = eventClassesOptions.find((x) => x.value === id);\r\n\r\n    setEventClass({\r\n      ...eventClass,\r\n      carClassId: id,\r\n      carClassName: tempClass.label,\r\n    });\r\n  };\r\n\r\n  const fetchEventToEdit = () => {\r\n    axios\r\n      .get(`${backendUrl()}/event/getEvent?eventId=${event.eventId}`)\r\n      .then((res) => {\r\n        setMyEvent({\r\n          ...res.data,\r\n          date: res.data.date ? new Date(res.data.date) : new Date(),\r\n          signDeadline: res.data.signDeadline\r\n            ? new Date(res.data.signDeadline)\r\n            : new Date(),\r\n        });\r\n        setStages(\r\n          res.data.stages.map((x) => {\r\n            return { ...x, startTime: new Date(x.startTime) };\r\n          })\r\n        );\r\n        setReferee(res.data.referee);\r\n        setEventClasses(\r\n          res.data.eventClasses.map((x) => {\r\n            return { ...x, carClassName: x.carClass.name };\r\n          })\r\n        );\r\n        setEventPaths(res.data.eventPaths);\r\n        setEventFiles(res.data.eventFiles);\r\n      });\r\n  };\r\n\r\n  const fetchRemoveEvent = () => {\r\n    axios\r\n      .get(`${backendUrl()}/event/deleteEvent?eventId=${event.eventId}`, {\r\n        headers: authHeader(),\r\n      })\r\n      .then((res) => {\r\n        handleClose();\r\n      });\r\n  };\r\n\r\n  const addFile = (e) => {\r\n    const currentFile = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", currentFile);\r\n\r\n    setFile({ ...file, file: formData, fileName: currentFile.name });\r\n  };\r\n\r\n  const addLogoFile = (e) => {\r\n    const currentFile = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append(\"file\", currentFile);\r\n\r\n    setLogoFile(formData);\r\n  };\r\n\r\n  const DatePickerContainer = ({ className, children }) => {\r\n    return (\r\n      <>\r\n        <CalendarContainer className={className}>\r\n          <div style={{ display: \"flex\" }}>{children}</div>\r\n        </CalendarContainer>\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      size=\"xl\"\r\n    >\r\n      <Modal.Header className=\"bg-dark text-white\" closeButton>\r\n        <Modal.Title>Dodawanie nowego wydarzenia</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"row u-text-center justify-content-center\">\r\n          <Card.Body className=\"py-0\">\r\n            <div className=\"row d-flex\">\r\n              <div className=\"col-lg-4 px-1\">\r\n                <InputLabeled\r\n                  label=\"Nazwa\"\r\n                  name=\"name\"\r\n                  handleChange={handleChange}\r\n                  big={true}\r\n                  value={myEvent.name}\r\n                  multiline={2}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-8 px-1\">\r\n                <InputLabeled\r\n                  label=\"Opis\"\r\n                  name=\"description\"\r\n                  handleChange={handleChange}\r\n                  big={true}\r\n                  value={myEvent.description}\r\n                  multiline={2}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row d-flex\">\r\n              <div className=\"col-lg-3 px-1\">\r\n                <InputLabeled\r\n                  label=\"Nazwa organizatora\"\r\n                  name=\"organizer\"\r\n                  handleChange={handleChange}\r\n                  big={true}\r\n                  value={myEvent.organizer}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3 px-1\">\r\n                <InputLabeled\r\n                  label=\"Ścieżka do logo wydarzenia\"\r\n                  inputPlaceholder=\"http://www.akteam.pl/logo.jpg\"\r\n                  name=\"logoPath\"\r\n                  handleChange={handleChange}\r\n                  big={true}\r\n                  value={myEvent.logoPath}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3 px-1\">\r\n                <CustomDatePicker\r\n                  label={\"Data wydarzenia\"}\r\n                  onChange={(value) => setMyEvent({ ...myEvent, date: value })}\r\n                  selected={myEvent.date}\r\n                  calendarContainer={DatePickerContainer}\r\n                  //placeholderText={placeholderFrom}\r\n                  minDate={null}\r\n                  maxDate={null}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-3 px-1\">\r\n                <CustomDatePicker\r\n                  label={\"Koniec zapisów\"}\r\n                  onChange={(value) =>\r\n                    setMyEvent({ ...myEvent, signDeadline: value })\r\n                  }\r\n                  selected={myEvent.signDeadline}\r\n                  calendarContainer={DatePickerContainer}\r\n                  //placeholderText={placeholderFrom}\r\n                  minDate={new Date()}\r\n                  maxDate={null}\r\n                />\r\n              </div>\r\n            </div>\r\n          </Card.Body>\r\n          <div className=\"col-lg-4 py-2  border-right shadow bg-white rounded\">\r\n            <div className=\"col-lg-12 border-right rounded\">\r\n              <Card className=\"text-center\">\r\n                <Card.Body className=\"p-0\">\r\n                  <Selector\r\n                    label={\"Sędziowie\"}\r\n                    options={refereeOptions}\r\n                    handleChange={(value) => addReferee(value)}\r\n                    isValid={true}\r\n                    skipDefault={true}\r\n                  />\r\n                  <Table responsive>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Login</th>\r\n                        <th className=\"text-end\">Usuń</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {referee.map((x, index) => (\r\n                        <tr key={x.userId + index}>\r\n                          <td>{x.username}</td>\r\n                          <td className=\"text-end\">\r\n                            <FontAwesomeIcon\r\n                              icon={faTimesCircle}\r\n                              onClick={() => removeReferee(x.userId)}\r\n                              title={\"Usuń załoge\"}\r\n                              cursor={\"pointer\"}\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                </Card.Body>\r\n              </Card>\r\n              <Card className=\"text-center\">\r\n                <Card.Header className=\"bg-dark text-white\">\r\n                  Podział na klasy\r\n                </Card.Header>\r\n                <Card.Body className=\"p-0\">\r\n                  <Table responsive>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Klasa</th>\r\n                        <th>Max silnik [cm3]</th>\r\n                        <th className=\"text-end\">Usuń</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {eventClasses.map((x, index) => (\r\n                        <tr key={x.carClassId + index}>\r\n                          <td>{x.carClassName}</td>\r\n                          <td>{x.maxEngineCapacity}</td>\r\n                          <td className=\"text-end\">\r\n                            <FontAwesomeIcon\r\n                              icon={faTimesCircle}\r\n                              onClick={() => removeClass(x.carClassId)}\r\n                              title={\"Usuń klase\"}\r\n                              cursor={\"pointer\"}\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                  <div className=\"d-grid\">\r\n                    <Selector\r\n                      className={\"w-50\"}\r\n                      label={\"Klasa\"}\r\n                      options={eventClassesOptions}\r\n                      handleChange={(value) => addEventClass(value)}\r\n                      isValid={true}\r\n                      value={eventClass.carClassId}\r\n                      skipDefault={true}\r\n                    />\r\n                    <InputLabeled\r\n                      label=\"Max silnik [cm3]\"\r\n                      name=\"name\"\r\n                      handleChange={(e) =>\r\n                        setEventClass({\r\n                          ...eventClass,\r\n                          maxEngineCapacity: e.target.value,\r\n                        })\r\n                      }\r\n                      big={true}\r\n                      value={eventClass.maxEngineCapacity}\r\n                    />\r\n                  </div>\r\n                  <Button\r\n                    className={\"px-4 my-3\"}\r\n                    variant=\"success\"\r\n                    onClick={addClass}\r\n                  >\r\n                    Dodaj klase\r\n                  </Button>\r\n                  <Form.Check\r\n                    inline\r\n                    label=\"Dodatkowa klasyfikacja AWD\"\r\n                    name=\"turbo\"\r\n                    type={\"checkbox\"}\r\n                    checked={myEvent.awdClassification}\r\n                    onClick={(e) =>\r\n                      setMyEvent({\r\n                        ...myEvent,\r\n                        awdClassification: e.target.checked,\r\n                      })\r\n                    }\r\n                  />\r\n                  <Form.Check\r\n                    inline\r\n                    label=\"Dodatkowa klasyfikacja RWD\"\r\n                    name=\"turbo\"\r\n                    type={\"checkbox\"}\r\n                    checked={myEvent.rwdClassification}\r\n                    onClick={(e) =>\r\n                      setMyEvent({\r\n                        ...myEvent,\r\n                        rwdClassification: e.target.checked,\r\n                      })\r\n                    }\r\n                  />\r\n                  <Form.Check\r\n                    inline\r\n                    label=\"Dodatkowa klasyfikacja FWD\"\r\n                    name=\"turbo\"\r\n                    type={\"checkbox\"}\r\n                    checked={myEvent.fwdClassification}\r\n                    onClick={(e) =>\r\n                      setMyEvent({\r\n                        ...myEvent,\r\n                        fwdClassification: e.target.checked,\r\n                      })\r\n                    }\r\n                  />\r\n                </Card.Body>\r\n              </Card>\r\n              <Card className=\"text-center\">\r\n                <Card.Header className=\"bg-dark text-white\">\r\n                  Plik z logo wydarzenia\r\n                </Card.Header>\r\n                <Card.Body className=\"p-1\">\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"logoPathFile\"\r\n                    accept=\"image/jpg\"\r\n                    onChange={(e) => addLogoFile(e)}\r\n                  />\r\n                </Card.Body>\r\n              </Card>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-lg-8 py-2 shadow mb-1 bg-white rounded\">\r\n            <Card>\r\n              <Card.Header className=\"bg-dark text-white\">\r\n                Odcinki PS/OS (w kolejności)\r\n              </Card.Header>\r\n              <Card.Body className=\"p-0\">\r\n                {stages.length > 0 && (\r\n                  <Table responsive>\r\n                    <thead>\r\n                      <tr>\r\n                        <th>#</th>\r\n                        <th>Nazwa</th>\r\n                        <th>Czas startu</th>\r\n                        <th>Częstotliwość</th>\r\n                        <th className=\"text-end\">Usuń</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {stages.map((x, index) => (\r\n                        <tr key={index}>\r\n                          <td>{index}</td>\r\n                          <td>{x.name}</td>\r\n                          <td>\r\n                            {x.startTime === null\r\n                              ? \"\"\r\n                              : format(x.startTime, \"HH:mm\")}\r\n                          </td>\r\n                          <td>{x.startFrequency + \" min\"}</td>\r\n                          <td className=\"text-end\">\r\n                            <FontAwesomeIcon\r\n                              icon={faTimesCircle}\r\n                              onClick={() => removeFromStages(x.index)}\r\n                              title={\"Usuń załoge\"}\r\n                              cursor={\"pointer\"}\r\n                            />\r\n                          </td>\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </Table>\r\n                )}\r\n                <div className=\"d-block\">\r\n                  <InputLabeled\r\n                    label=\"Nazwa\"\r\n                    name=\"name\"\r\n                    handleChange={handleStageChange}\r\n                    big={true}\r\n                    value={stage.name}\r\n                  />\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div className=\"col-lg-3\">\r\n                    <InputLabeled\r\n                      label=\"Długość [m]\"\r\n                      name=\"distance\"\r\n                      handleChange={handleStageChange}\r\n                      big={true}\r\n                      onlyNumber={true}\r\n                      value={stage.distance}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-lg-4\">\r\n                    <TimePicker\r\n                      label={\"Czas startu odcinka\"}\r\n                      onChange={(value) => {\r\n                        setStage({\r\n                          ...stage,\r\n                          startTime: value,\r\n                        });\r\n                      }}\r\n                      calendarContainer={DatePickerContainer}\r\n                      minDate={new Date()}\r\n                      maxDate={null}\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-lg-5\">\r\n                    <InputLabeled\r\n                      label=\"Częstotliwość startów [min]\"\r\n                      name=\"startFrequency\"\r\n                      handleChange={handleStageChange}\r\n                      big={true}\r\n                      value={stage.startFrequency}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center py-3\">\r\n                  <Button\r\n                    className={\"px-4 mx-3\"}\r\n                    variant=\"success\"\r\n                    onClick={addStage}\r\n                  >\r\n                    Dodaj odcinek\r\n                  </Button>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n\r\n            <Card className=\"text-center\">\r\n              <Card.Header className=\"bg-dark text-white\">\r\n                Linki do regulaminow, informacji itd.\r\n              </Card.Header>\r\n              <Card.Body className=\"p-0\">\r\n                <Table responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Link</th>\r\n                      <th>Opis</th>\r\n                      <th className=\"text-end\">Usuń</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {eventPaths.map((path, index) => (\r\n                      <tr key={index}>\r\n                        <td>{path.path}</td>\r\n                        <td>{path.description}</td>\r\n                        <td className=\"text-end\">\r\n                          <FontAwesomeIcon\r\n                            icon={faTimesCircle}\r\n                            onClick={() =>\r\n                              setEventPaths(\r\n                                eventPaths.filter(\r\n                                  (elem) => elem.path !== path.path\r\n                                )\r\n                              )\r\n                            }\r\n                            title={\"Usuń link\"}\r\n                            cursor={\"pointer\"}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n                <div className=\"d-grid\">\r\n                  <InputLabeled\r\n                    label=\"Link/ścieżka\"\r\n                    name=\"path\"\r\n                    handleChange={(e) =>\r\n                      setPath({ ...path, path: e.target.value })\r\n                    }\r\n                    big={true}\r\n                    value={path.path}\r\n                  />\r\n                  <InputLabeled\r\n                    label=\"Opis\"\r\n                    name=\"description\"\r\n                    handleChange={(e) =>\r\n                      setPath({ ...path, description: e.target.value })\r\n                    }\r\n                    big={true}\r\n                    value={path.description}\r\n                  />\r\n                </div>\r\n                <Button\r\n                  className={\"px-4 my-3\"}\r\n                  variant=\"success\"\r\n                  onClick={addPath}\r\n                  disabled={path.description === \"\" || path.link === \"\"}\r\n                >\r\n                  Dodaj link\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card className=\"text-center\">\r\n              <Card.Header className=\"bg-dark text-white\">Pliki</Card.Header>\r\n              <Card.Body className=\"p-0\">\r\n                <Table responsive>\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Plik</th>\r\n                      <th>Opis</th>\r\n                      <th className=\"text-end\">Usuń</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {eventFiles.map((file, index) => (\r\n                      <tr key={index}>\r\n                        <td>{file.fileName}</td>\r\n                        <td>{file.description}</td>\r\n                        <td className=\"text-end\">\r\n                          <FontAwesomeIcon\r\n                            icon={faTimesCircle}\r\n                            onClick={() => {\r\n                              removeFile(file.id);\r\n                              setEventFiles(\r\n                                eventFiles.filter(\r\n                                  (elem) => elem.fileName !== file.fileName\r\n                                )\r\n                              );\r\n                            }}\r\n                            title={\"Usuń plik\"}\r\n                            cursor={\"pointer\"}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n                <div className=\"d-grid\">\r\n                  <input\r\n                    type=\"file\"\r\n                    name=\"file\"\r\n                    accept=\"application/pdf,application/vnd.ms-excel\"\r\n                    onChange={(e) => addFile(e)}\r\n                  />\r\n                  <InputLabeled\r\n                    label=\"Opis\"\r\n                    name=\"description\"\r\n                    handleChange={(e) =>\r\n                      setFile({ ...file, description: e.target.value })\r\n                    }\r\n                    big={true}\r\n                    value={file.description}\r\n                  />\r\n                </div>\r\n                <Button\r\n                  className={\"px-4 my-3\"}\r\n                  variant=\"success\"\r\n                  onClick={addFiles}\r\n                  disabled={file.description === \"\" || file.fileName === \"\"}\r\n                >\r\n                  Dodaj plik\r\n                </Button>\r\n              </Card.Body>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n        {removeEvent && (\r\n          <OkCancelModal\r\n            show={true}\r\n            title={\"Usuwanie wydarzenia\"}\r\n            text={`Czy napewno chcesz usunąć wydarzenie? Operacja nieodwracalna`}\r\n            handleAccept={() => {\r\n              fetchRemoveEvent();\r\n              setRemoveEvent(false);\r\n            }}\r\n            handleClose={() => setRemoveEvent(false)}\r\n          />\r\n        )}\r\n      </Modal.Body>\r\n      <Modal.Footer className={\"justify-content-center\"}>\r\n        {event && (\r\n          <Button\r\n            className={\"mx-3\"}\r\n            variant=\"secondary\"\r\n            onClick={() => setRemoveEvent(true)}\r\n          >\r\n            Usuń wydarzenie\r\n          </Button>\r\n        )}\r\n        <Button className={\"mx-3\"} variant=\"secondary\" onClick={handleClose}>\r\n          Anuluj\r\n        </Button>\r\n        <Button\r\n          className={\"px-4 mx-3\"}\r\n          variant=\"success\"\r\n          onClick={handleAccept}\r\n          disabled={stages.length === 0}\r\n        >\r\n          OK\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport moment from \"moment\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const EventCard = ({\r\n  event,\r\n  onJoin,\r\n  onTeamList,\r\n  onScore,\r\n  onEdit,\r\n  mainAdmin,\r\n}) => {\r\n  const eventDeadlined =\r\n    new Date().getTime() > new Date(event.signDeadline).getTime();\r\n\r\n  return (\r\n    <div className=\"col-lg-6 pb-3 u-box-shadow\">\r\n      <Card className=\"\">\r\n        <Card.Header className=\"bg-secondary text-white text-start fw-bold py-1\">\r\n          <div className=\"row px-1\">\r\n            <div className=\"col-11 px-0\">{event?.name}</div>\r\n            <div className=\"col-1 px-0 text-end\">\r\n              {onEdit !== undefined && mainAdmin && (\r\n                <FontAwesomeIcon\r\n                  className={\"text-white fa-lg\"}\r\n                  icon={faEdit}\r\n                  onClick={onEdit}\r\n                  cursor={\"pointer\"}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Card.Header>\r\n        <Card.Body className=\"p-1\">\r\n          <div className=\"position-absolute end-0 mx-3 text-end badge bg-primary text-wrap fst-italic\">\r\n            {moment(event?.date).format(\"dddd, DD MMM YYYY, HH:mm\")}\r\n          </div>\r\n          <div className=\"container d-flex\">\r\n            <div\r\n              className=\"col-lg-2 px-0 align-self-center\"\r\n              style={{ width: \"90px\" }}\r\n            >\r\n              {event.logoPathFile ? (\r\n                <img\r\n                  id={\"eventImage\" + event.eventId}\r\n                  className=\"img-fluid rounded float-left\"\r\n                  src={\"data:image/jpg;base64,\" + event.logoPathFile}\r\n                  alt=\"Logo\"\r\n                ></img>\r\n              ) : event.logoPath !== undefined && event.logoPath !== null ? (\r\n                <img\r\n                  className=\"img-fluid rounded float-left\"\r\n                  src={event.logoPath}\r\n                  alt=\"Logo\"\r\n                ></img>\r\n              ) : (\r\n                <img\r\n                  src=\"/akbpLogo.png\"\r\n                  className=\"img-fluid rounded float-left\"\r\n                  alt=\"...\"\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"col-lg-10 mt-3\">\r\n              {event.organizer !== undefined && event.organizer !== null && (\r\n                <p className=\"m-3\">{`Organizator: ${event.organizer}`}</p>\r\n              )}\r\n              <p className=\"fw-bold fst-italic mt-2\">\r\n                {`Koniec zapisów:  ${moment(event?.signDeadline).format(\r\n                  \"dddd, DD MMM YYYY, HH:mm\"\r\n                )}`}\r\n              </p>\r\n              {new Date(event?.signDeadline) < new Date() &&\r\n                new Date(event?.date) > new Date() && (\r\n                  <p className=\"\">{\"Zapisy zamknięte\"}</p>\r\n                )}\r\n              {event.joined && (\r\n                <div className=\"d-inline-flex\">\r\n                  <FontAwesomeIcon\r\n                    className={\"text-success fa-lg\"}\r\n                    icon={faStar}\r\n                  />\r\n                  <h6>Jesteś zapisany</h6>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </Card.Body>\r\n        <Card.Footer className=\"text-start py-0\">\r\n          <div className=\"row my-2\">\r\n            <div className=\"col-6 px-0\">\r\n              {/* {new Date().getTime() <=\r\n                new Date(event.signDeadline).getTime() && ( */}\r\n              <Button\r\n                className={\"start-0 py-1 px-1\"}\r\n                variant=\"success\"\r\n                onClick={onJoin}\r\n              >\r\n                {eventDeadlined\r\n                  ? \"Informacje\"\r\n                  : event.joined\r\n                  ? \"Moje zgłoszenie\"\r\n                  : \"Info / Zgłoszenia\"}\r\n              </Button>\r\n              {/* )} */}\r\n            </div>\r\n            <div className=\"col-6 px-0 d-flex justify-content-end\">\r\n              <Button\r\n                className={\"py-1 px-1\"}\r\n                variant=\"dark\"\r\n                onClick={onTeamList}\r\n              >\r\n                Lista\r\n              </Button>\r\n              <Button\r\n                className={\"py-1 px-1 mx-1\"}\r\n                variant=\"warning\"\r\n                onClick={onScore}\r\n              >\r\n                Wyniki\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Card.Footer>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { backendUrl } from \"../utils/fetchUtils\";\r\nimport ResultTable from \"../common/table/ResultTable\";\r\nimport { NrBadge } from \"../common/NrBadge\";\r\nimport { CarDiv, TeamDiv } from \"../common/Div\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faQuestion } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const TeamListModal = ({ show, handleClose, eventId, started }) => {\r\n  const [teams, setTeams] = useState([]);\r\n  const [startEvent, setStartEvent] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [referee, setReferee] = useState(false);\r\n\r\n  const fetchTeams = () => {\r\n    if (eventId === undefined) return;\r\n    axios\r\n      .get(`${backendUrl()}/event/getTeams?eventId=${eventId}`)\r\n      .then((res) => {\r\n        setTeams(res.data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      setLoading(true);\r\n      setTeams([]);\r\n    }\r\n    fetchTeams();\r\n  }, [show]);\r\n\r\n  useEffect(() => {\r\n    setTeams([]);\r\n    fetchTeams();\r\n  }, [referee]);\r\n\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        width: \"8%\",\r\n        id: \"index\",\r\n        Header: \"L.p\",\r\n        accessor: (cellInfo) => cellInfo.number,\r\n        disableFilters: true,\r\n        Cell: (row) => <div className=\"ps-2\"> {row.row.index + 1}</div>,\r\n      },\r\n      {\r\n        width: \"9%\",\r\n        id: \"#\",\r\n        Header: \"#Nr\",\r\n        accessor: (cellInfo) => cellInfo.number,\r\n        disableFilters: true,\r\n        Cell: (row) => <NrBadge value={row.value}></NrBadge>,\r\n      },\r\n      {\r\n        width: \"30%\",\r\n        id: \"team\",\r\n        Header: \"Załoga\",\r\n        accessor: (cellInfo) => cellInfo.team,\r\n        disableFilters: true,\r\n        Cell: (row) => <TeamDiv team={row.value}></TeamDiv>,\r\n      },\r\n      {\r\n        width: \"30%\",\r\n        id: \"car\",\r\n        Header: \"Samochód\",\r\n        accessor: (cellInfo) => cellInfo.team.currentCar,\r\n        disableFilters: true,\r\n        Cell: (row) => (\r\n          <CarDiv\r\n            line1={(row.value?.brand || \"\") + \" \" + (row.value?.model || \"\")}\r\n            line2={row.row.original.carClass.name}\r\n            carBrand={row.value?.brand}\r\n            driveType={row.value?.driveTypeEnum}\r\n          ></CarDiv>\r\n        ),\r\n      },\r\n      {\r\n        width: \"11%\",\r\n        id: \"engine\",\r\n        Header: \"Silnik\",\r\n        accessor: (cellInfo) =>\r\n          cellInfo.team.currentCar?.engineCapacity + \" cm3\",\r\n        disableFilters: true,\r\n      },\r\n      {\r\n        width: \"11%\",\r\n        id: \"entryFee\",\r\n        Header: \"Potwierdz.\",\r\n        accessor: (cellInfo) => cellInfo.entryFeePaid,\r\n        disableFilters: true,\r\n        Cell: (row) => {\r\n          return (\r\n            <FontAwesomeIcon\r\n              icon={row.value ? faCheck : faQuestion}\r\n              style={{ color: row.value ? \"green\" : \"black\" }}\r\n              title={\r\n                row.value ? \"Potwierdzony\" : \"Dodaj potwierdzenie przelewu\"\r\n              }\r\n              cursor={\"pointer\"}\r\n            />\r\n          );\r\n        },\r\n      },\r\n    ],\r\n    []\r\n  );\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      size=\"xl\"\r\n    >\r\n      <Modal.Header className=\"bg-dark text-white\" closeButton>\r\n        <Modal.Title>Lista zapisanych</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"px-0\">\r\n        <p style={{ fontSize: \"11px\" }} className=\"text-center my-0 py-0\">\r\n          Aplikacja w fazie testów\r\n        </p>\r\n        {loading && (\r\n          <div className=\"text-center\">\r\n            <Spinner animation=\"border\" variant=\"secondary\" size=\"lg\" />\r\n          </div>\r\n        )}\r\n        {!loading && teams.length === 0 && (\r\n          <h1 className=\"text-center\">Brak zgłoszeń - bądź pierwszy!</h1>\r\n        )}\r\n        {!loading && teams?.length > 0 && (\r\n          <ResultTable\r\n            columns={columns}\r\n            data={teams}\r\n            isLoading={false}\r\n            isFooter={false}\r\n            isHeader={true}\r\n            manualPagination={true}\r\n          />\r\n        )}\r\n      </Modal.Body>\r\n      <Modal.Footer className={\"justify-content-center\"}>\r\n        <div className=\"d-grid\">\r\n          {/* {referee && (\r\n            <Button\r\n              className={\"m-2\"}\r\n              variant=\"success\"\r\n              onClick={() => setStartEvent(true)}\r\n              disabled={started}\r\n            >\r\n              Zamknij liste / Rozpocznij wydarzenie\r\n            </Button>\r\n          )} */}\r\n          <Button className={\"m-1\"} variant=\"secondary\" onClick={handleClose}>\r\n            Anuluj\r\n          </Button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { backendUrl } from \"../utils/fetchUtils\";\r\nimport authHeader from \"../../service/auth-header\";\r\nimport { InputLabeled } from \"../common/InputLabeled\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { Selector } from \"../common/Selector\";\r\nimport {\r\n  faBuilding,\r\n  faCar,\r\n  faCarAlt,\r\n  faUserAstronaut,\r\n  faUserClock,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const QuickJoinPanel = ({ show, handleClose, eventId }) => {\r\n  const [msg, setMsg] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const [options, setOptions] = useState();\r\n  const [team, setTeam] = useState({\r\n    coSportLicense: false,\r\n    sportLicense: false,\r\n    birthDate: new Date(),\r\n    currentCar: {\r\n      carId: null,\r\n      brand: \"\",\r\n      model: \"\",\r\n      year: \"\",\r\n      licensePlate: \"\",\r\n      vin: \"\",\r\n      engineCapacity: \"\",\r\n      turbo: false,\r\n      driveType: \"1\",\r\n      petrol: \"BENZYNA\",\r\n      insurance: \"\",\r\n      insuranceExpiryDate: new Date(),\r\n      carInspectionExpiryDate: new Date(),\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      axios.get(`${backendUrl()}/team/getTeamOptionList`).then((res) => {\r\n        setOptions(res.data);\r\n      });\r\n      setTeam({\r\n        coSportLicense: false,\r\n        sportLicense: false,\r\n        birthDate: new Date(),\r\n        currentCar: {\r\n          carId: null,\r\n          brand: \"\",\r\n          model: \"\",\r\n          year: \"\",\r\n          licensePlate: \"\",\r\n          vin: \"\",\r\n          engineCapacity: \"\",\r\n          turbo: false,\r\n          driveType: \"1\",\r\n          petrol: \"BENZYNA\",\r\n          insurance: \"\",\r\n          insuranceExpiryDate: new Date(),\r\n          carInspectionExpiryDate: new Date(),\r\n        },\r\n      });\r\n      setMsg();\r\n      setLoading(false);\r\n    }\r\n  }, [show]);\r\n\r\n  const fetchAddTeam = () => {\r\n    setLoading(true);\r\n    axios\r\n      .post(`${backendUrl()}/team/addTeam?eventId=${eventId}`, team, {\r\n        headers: authHeader(),\r\n      })\r\n      .then((res) => {\r\n        setMsg(res.data);\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    fetchAddTeam();\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      size=\"l\"\r\n    >\r\n      <Modal.Header className=\"bg-dark text-white\" closeButton>\r\n        <Modal.Title>Szybkie dodawanie zawodnika</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"d-flex justify-content-center text-center\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"row d-flex\">\r\n              <div className=\"col-lg-6\">\r\n                <InputLabeled\r\n                  label=\"Imie i nazwisko kierowcy\"\r\n                  name=\"driver\"\r\n                  handleChange={(e) =>\r\n                    setTeam({ ...team, driver: e.target.value })\r\n                  }\r\n                  value={team.driver}\r\n                  big={true}\r\n                  required={true}\r\n                  icon={faUserAstronaut}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <InputLabeled\r\n                  label=\"Imie i nazwisko pilota\"\r\n                  name=\"coDriver\"\r\n                  handleChange={(e) =>\r\n                    setTeam({ ...team, coDriver: e.target.value })\r\n                  }\r\n                  value={team.coDriver}\r\n                  big={true}\r\n                  icon={faUserClock}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row d-flex\">\r\n              <div className=\"col-lg-6\">\r\n                <InputLabeled\r\n                  label=\"Automobilklub kierowcy\"\r\n                  name=\"club\"\r\n                  handleChange={(e) =>\r\n                    setTeam({ ...team, club: e.target.value })\r\n                  }\r\n                  value={team.club}\r\n                  big={true}\r\n                  icon={faBuilding}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <InputLabeled\r\n                  label=\"Automobilklub pilota\"\r\n                  name=\"coClub\"\r\n                  handleChange={(e) =>\r\n                    setTeam({ ...team, coClub: e.target.value })\r\n                  }\r\n                  value={team.coClub}\r\n                  big={true}\r\n                  icon={faBuilding}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row d-flex\">\r\n              <div className=\"col-lg-6\">\r\n                <InputLabeled\r\n                  label=\"Marka samochodu\"\r\n                  name=\"carBrand\"\r\n                  handleChange={(e) =>\r\n                    setTeam({\r\n                      ...team,\r\n                      currentCar: { ...team.currentCar, brand: e.target.value },\r\n                    })\r\n                  }\r\n                  value={team.currentCar.brand}\r\n                  big={true}\r\n                  required={true}\r\n                  icon={faCar}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <InputLabeled\r\n                  label=\"Model samochodu\"\r\n                  name=\"carModel\"\r\n                  handleChange={(e) =>\r\n                    setTeam({\r\n                      ...team,\r\n                      currentCar: { ...team.currentCar, model: e.target.value },\r\n                    })\r\n                  }\r\n                  value={team.currentCar.model}\r\n                  big={true}\r\n                  required={true}\r\n                  icon={faCarAlt}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row d-flex\">\r\n              <div className=\"col-lg-6\">\r\n                <InputLabeled\r\n                  label=\"Pojemność silnika [cm3]\"\r\n                  name=\"engineCapacity\"\r\n                  handleChange={(e) =>\r\n                    setTeam({\r\n                      ...team,\r\n                      currentCar: {\r\n                        ...team.currentCar,\r\n                        engineCapacity: e.target.value,\r\n                      },\r\n                    })\r\n                  }\r\n                  value={team.currentCar.engineCapacity}\r\n                  big={true}\r\n                  required={true}\r\n                  onlyNumber={true}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <Selector\r\n                  label={\"Rodzaj napędu\"}\r\n                  options={options?.driveTypeOption}\r\n                  handleChange={(value) =>\r\n                    setTeam({\r\n                      ...team,\r\n                      currentCar: {\r\n                        ...team.currentCar,\r\n                        driveType: value,\r\n                      },\r\n                    })\r\n                  }\r\n                  isValid={true}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <Form>\r\n                <span className={\"py-0 mb-2 mt-1 mx-1 input-group-text\"}>\r\n                  Turbo\r\n                </span>\r\n                <Form.Check\r\n                  inline\r\n                  label=\"TAK\"\r\n                  name=\"turbo\"\r\n                  type={\"radio\"}\r\n                  id={`inline-1`}\r\n                  checked={team.currentCar.turbo}\r\n                  onClick={() =>\r\n                    setTeam({\r\n                      ...team,\r\n                      currentCar: { ...team.currentCar, turbo: true },\r\n                    })\r\n                  }\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"NIE\"\r\n                  name=\"turbo\"\r\n                  type={\"radio\"}\r\n                  id={`inline-2`}\r\n                  checked={!team.currentCar.turbo}\r\n                  onClick={() =>\r\n                    setTeam({\r\n                      ...team,\r\n                      currentCar: { ...team.currentCar, turbo: false },\r\n                    })\r\n                  }\r\n                />\r\n              </Form>\r\n            </div>\r\n            <div className=\"text-center\" style={{ height: \"50px\" }}>\r\n              <h4 className=\"text-success fw-bold\">{msg}</h4>\r\n              {loading && (\r\n                <Spinner animation=\"border\" variant=\"secondary\" size=\"lg\" />\r\n              )}\r\n            </div>\r\n            <Button\r\n              className={\"m-1\"}\r\n              variant=\"success\"\r\n              type=\"submit\"\r\n              disabled={msg}\r\n            >\r\n              Dołącz do wydarzenia\r\n            </Button>\r\n            <Button\r\n              className={\"m-1\"}\r\n              variant=\"secondary\"\r\n              onClick={() => handleClose()}\r\n            >\r\n              {msg ? \"Ok\" : \"Wyjdź\"}\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { backendUrl, fetchRemoveFromEvent } from \"../utils/fetchUtils\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport authHeader from \"../../service/auth-header\";\r\nimport moment from \"moment\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { QuickJoinPanel } from \"../join/QuickJoinPanel\";\r\nimport { TeamModal } from \"../team/TeamModal\";\r\nimport { download } from \"../utils/fileUtils\";\r\n\r\nexport const EventModal = ({ show, handleClose, event }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const [team, setTeam] = useState(undefined);\r\n  const [file, setFile] = useState();\r\n  const [uploading, setUploading] = useState(false);\r\n  const [fileMsg, setFileMsg] = useState();\r\n  const [notJoined, setNotJoined] = useState(false);\r\n  const [myEvent, setMyEvent] = useState();\r\n  const [quickJoin, setQuickJoin] = useState();\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const [fillTeam, setFillTeam] = useState();\r\n\r\n  const loggedUser = sessionStorage.getItem(\"username\") !== null;\r\n\r\n  useEffect(() => {\r\n    if (!show) return;\r\n\r\n    fetchGetTeam();\r\n    setUploading(false);\r\n    setFileMsg();\r\n    setNotJoined(false);\r\n    setMyEvent(event);\r\n  }, [show]);\r\n\r\n  const signDeadlined = event\r\n    ? new Date().getTime() > new Date(event.signDeadline).getTime()\r\n    : false;\r\n\r\n  const fetchGetTeam = () => {\r\n    axios\r\n      .get(`${backendUrl()}/team/getTeam`, {\r\n        headers: authHeader(),\r\n      })\r\n      .then((res) => {\r\n        setNotJoined(res.data === \"\");\r\n        if (res.data !== \"\") setTeam(res.data);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (event?.eventId !== undefined && team?.teamId !== undefined)\r\n      axios\r\n        .get(\r\n          `${backendUrl()}/event/getEntryFeeFile?eventId=${\r\n            event.eventId\r\n          }&teamId=${team.teamId}`\r\n        )\r\n        .then((res) => {\r\n          if (res.status === 204) setNotJoined(true);\r\n          else setFileMsg(\"Mamy już Twoje potwierdzenie\");\r\n        })\r\n        .catch((error) => {\r\n          setFileMsg();\r\n        });\r\n  }, [team]);\r\n\r\n  const doRemoveFromEvent = () => {\r\n    fetchRemoveFromEvent(event.eventId, team?.teamId, () => {\r\n      setMyEvent({ ...myEvent, joined: false });\r\n      setNotJoined(true);\r\n    });\r\n  };\r\n\r\n  const fetchUpload = (eventId, teamId) => {\r\n    if (file.size > 2 * 1024 * 1024) {\r\n      setFileMsg(\"Plik jest zbyt duży (maksymalnie 2mb)\");\r\n      return;\r\n    }\r\n    setUploading(true);\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    axios\r\n      .post(\r\n        `${backendUrl()}/event/addEntryFeeFile?eventId=${eventId}&teamId=${teamId}`,\r\n        formData,\r\n        {\r\n          headers: authHeader(),\r\n        }\r\n      )\r\n      .then((res) => {\r\n        setUploading(false);\r\n        res.data\r\n          ? setFileMsg(\"Plik został dodany\")\r\n          : setFileMsg(\"Plik NIE został dodany - błąd\");\r\n      });\r\n  };\r\n\r\n  const downloadFile = (e, file) => {\r\n    e.preventDefault();\r\n    download(`${backendUrl()}/event/getEventFile?id=${file.id}`, file.fileName);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        style={{ zIndex: quickJoin || fillTeam ? 1000 : 1055 }}\r\n        show={show}\r\n        onHide={handleClose}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n        size=\"xl\"\r\n      >\r\n        <Modal.Header className=\"bg-dark text-white\" closeButton>\r\n          <Modal.Title className=\"w-100 row\">\r\n            <div className=\"col-lg-8\">{`Informacje o wydarzeniu`}</div>\r\n            {myEvent?.joined && (\r\n              <div className=\"col-lg-4\">\r\n                <FontAwesomeIcon\r\n                  className={\"text-success fa-lg\"}\r\n                  icon={faStar}\r\n                />\r\n                Jesteś zapisany\r\n              </div>\r\n            )}\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <p style={{ fontSize: \"11px\" }} className=\"text-center my-0 py-0\">\r\n          Aplikacja w fazie testów\r\n        </p>\r\n        <Tabs\r\n          activeKey={activeTab}\r\n          onSelect={(key) => setActiveTab(key)}\r\n          className=\"m-0 fw-bold\"\r\n        >\r\n          <Tab eventKey={1} title=\"Informacje\">\r\n            <div className=\"row text-center col-lg-12\">\r\n              <div className=\"col-lg-4\">\r\n                {event?.logoPathFile ? (\r\n                  <img\r\n                    id={\"eventImage\" + event.eventId}\r\n                    style={{ height: \"140px\" }}\r\n                    className=\"img-fluid rounded float-left\"\r\n                    src={\"data:image/jpg;base64,\" + event.logoPathFile}\r\n                    alt=\"Logo\"\r\n                  ></img>\r\n                ) : (\r\n                  event?.logoPath !== undefined &&\r\n                  event?.logoPath !== null && (\r\n                    <div className=\"\">\r\n                      <img\r\n                        style={{ height: \"140px\" }}\r\n                        className=\"img-fluid rounded float-left\"\r\n                        src={event.logoPath}\r\n                        alt=\"Logo\"\r\n                      ></img>\r\n                    </div>\r\n                  )\r\n                )}\r\n              </div>\r\n              <div className=\"col-lg-8\">\r\n                <h3>{event?.name || \"\"}</h3>\r\n                <h5>{`Data wydarzenia:  `}</h5>\r\n                <h5 className=\"fw-bold\">\r\n                  {moment(event?.date).format(\" dddd, DD MMM YYYY, HH:mm\")}\r\n                </h5>\r\n                <div className=\"col-lg-10\">\r\n                  <p className=\"fw-bold fst-italic m-4\">\r\n                    {`Koniec zapisów:  ${moment(event?.signDeadline).format(\r\n                      \"dddd, DD MMM YYYY, HH:mm\"\r\n                    )}`}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <p style={{ whiteSpace: \"pre-line\" }} className=\"m-3\">\r\n                {event?.description || \"\"}\r\n              </p>\r\n            </div>\r\n            <Card className=\"text-center\">\r\n              <Card.Header className=\"bg-dark text-white\">\r\n                Do pobrania:\r\n              </Card.Header>\r\n              <Card.Body>\r\n                <div className=\"row \">\r\n                  <div className=\"col-lg-12 px-0\">\r\n                    {event?.eventPaths?.map((path, index) => (\r\n                      <h6 key={index} className=\"my-1\">\r\n                        <a\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          href={path.path}\r\n                        >\r\n                          {path.description}\r\n                        </a>\r\n                      </h6>\r\n                    ))}\r\n                    {event?.eventFiles?.map((file, index) => (\r\n                      <h6 key={index} className=\"my-1\">\r\n                        <a href={\"www\"} onClick={(e) => downloadFile(e, file)}>\r\n                          {file.description}\r\n                        </a>\r\n                      </h6>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n          </Tab>\r\n          {!loggedUser ? (\r\n            <></>\r\n          ) : (\r\n            <Tab eventKey={2} title=\"Wpisowe\">\r\n              <div className=\"row mx-2 justify-content-center\">\r\n                <div className=\"col-lg-6 pb-3 px-1\">\r\n                  <h5 className=\"text-center py-4\">\r\n                    Tutaj możesz dodać plik z potwierdzeniem wpisowego,\r\n                    przyspieszy to proces odbioru administracyjnego\r\n                  </h5>\r\n                  <Card className=\"text-center \">\r\n                    <Card.Header className=\"bg-dark text-white\">\r\n                      Wpisowe\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                      {notJoined ? (\r\n                        <p>\r\n                          Zapisz się a następnie będziesz miał możliwość\r\n                          przesłania pliku\r\n                        </p>\r\n                      ) : (\r\n                        <p>Dodaj plik z potwierdzeniem opłacenia wpisowego</p>\r\n                      )}\r\n                      <input\r\n                        disabled={notJoined}\r\n                        type=\"file\"\r\n                        name=\"file\"\r\n                        accept=\"application/pdf,application/vnd.ms-excel\"\r\n                        onChange={(e) => setFile(e.target.files[0])}\r\n                      />\r\n                      {fileMsg && <p className=\"fw-bold m-2\">{fileMsg}</p>}\r\n                      <div>\r\n                        {uploading ? (\r\n                          <Spinner animation=\"border\" variant=\"secondary\" />\r\n                        ) : (\r\n                          <Button\r\n                            className={\"mt-2 mb-0\"}\r\n                            variant=\"secondary\"\r\n                            onClick={() =>\r\n                              fetchUpload(event.eventId, team.teamId)\r\n                            }\r\n                            disabled={file === undefined}\r\n                          >\r\n                            Wyślij plik\r\n                          </Button>\r\n                        )}\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </div>\r\n              </div>\r\n            </Tab>\r\n          )}\r\n        </Tabs>\r\n        <Modal.Footer>\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-xl-12 d-flex\">\r\n              <div className=\"\">\r\n                <Button\r\n                  className={\"m-1\"}\r\n                  variant=\"success\"\r\n                  form=\"teamForm\"\r\n                  onClick={() => {\r\n                    loggedUser\r\n                      ? setFillTeam(true)\r\n                      : navigate(`login?${event.eventId}`);\r\n                  }}\r\n                  disabled={signDeadlined && notJoined}\r\n                >\r\n                  {notJoined ? \"Zapisz się\" : \"Edytuj dane\"}\r\n                </Button>\r\n              </div>\r\n              <div className=\"\">\r\n                {/* <Button\r\n                className={\"m-1\"}\r\n                variant=\"success\"\r\n                onClick={() => {\r\n                  loggedUser ? setFillTeam(true) : navigate(`login?${event.eventId}`);\r\n                }}\r\n              >\r\n                {myEvent?.joined ? \"Ok\" : \"Zapisz (po zalogowaniu)\"}\r\n              </Button> */}\r\n                <Button\r\n                  className={\"m-1\"}\r\n                  variant=\"secondary\"\r\n                  onClick={handleClose}\r\n                >\r\n                  Zamknij okno\r\n                </Button>\r\n                {myEvent?.joined && (\r\n                  <Button\r\n                    className={\"mx-3\"}\r\n                    variant=\"danger\"\r\n                    onClick={() => doRemoveFromEvent()}\r\n                    disabled={signDeadlined}\r\n                  >\r\n                    Wypisz się\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n      <QuickJoinPanel\r\n        show={quickJoin}\r\n        handleClose={() => setQuickJoin()}\r\n        eventId={event?.eventId}\r\n      />\r\n      <TeamModal\r\n        show={fillTeam}\r\n        handleClose={() => setFillTeam()}\r\n        handleOk={() => handleClose()}\r\n        myEvent={event}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { backendUrl } from \"../utils/fetchUtils\";\r\nimport { InputLabeled } from \"../common/InputLabeled\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport { Selector } from \"../common/Selector\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport {\r\n  faBuilding,\r\n  faCar,\r\n  faCarAlt,\r\n  faUserAstronaut,\r\n  faUserClock,\r\n  faUserFriends,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport const BasicTeamDataForm = ({\r\n  show,\r\n  myTeam,\r\n  eventId,\r\n  onSave,\r\n  okBtnLabel,\r\n  handleClose,\r\n  title,\r\n}) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [options, setOptions] = useState();\r\n  const [team, setTeam] = useState(myTeam);\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      axios.get(`${backendUrl()}/team/getTeamOptionList`).then((res) => {\r\n        setOptions(res.data);\r\n      });\r\n      setLoading(false);\r\n    }\r\n  }, [show]);\r\n\r\n  const handleSubmit = (event) => {\r\n    setLoading(true);\r\n    event.preventDefault();\r\n    onSave(team);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      show={show}\r\n      onHide={handleClose}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      size=\"l\"\r\n    >\r\n      <Modal.Header closeButton className=\"bg-dark text-white\">\r\n        <Modal.Title className=\"text-white\">{title}</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <div className=\"d-flex justify-content-center text-center\">\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"row d-flex\">\r\n              <div className=\"col-lg-6\">\r\n                <InputLabeled\r\n                  label=\"Imie i nazwisko kierowcy\"\r\n                  name=\"driver\"\r\n                  handleChange={(e) =>\r\n                    setTeam({ ...team, driver: e.target.value })\r\n                  }\r\n                  value={team.driver}\r\n                  big={true}\r\n                  required={true}\r\n                  icon={faUserAstronaut}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <InputLabeled\r\n                  label=\"Imie i nazwisko pilota\"\r\n                  name=\"coDriver\"\r\n                  handleChange={(e) =>\r\n                    setTeam({ ...team, coDriver: e.target.value })\r\n                  }\r\n                  value={team.coDriver}\r\n                  big={true}\r\n                  icon={faUserClock}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row d-flex\">\r\n              <div className=\"col-lg-6\">\r\n                <InputLabeled\r\n                  label=\"Automobilklub kierowcy\"\r\n                  name=\"club\"\r\n                  handleChange={(e) =>\r\n                    setTeam({ ...team, club: e.target.value })\r\n                  }\r\n                  value={team.club}\r\n                  big={true}\r\n                  icon={faBuilding}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <InputLabeled\r\n                  label=\"Automobilklub pilota\"\r\n                  name=\"coClub\"\r\n                  handleChange={(e) =>\r\n                    setTeam({ ...team, coClub: e.target.value })\r\n                  }\r\n                  value={team.coClub}\r\n                  big={true}\r\n                  icon={faBuilding}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row d-flex\">\r\n              <div className=\"col-lg-12\">\r\n                <InputLabeled\r\n                  label=\"Nazwa Teamu\"\r\n                  name=\"teamName\"\r\n                  handleChange={(e) =>\r\n                    setTeam({ ...team, teamName: e.target.value })\r\n                  }\r\n                  value={team.teamName}\r\n                  big={true}\r\n                  icon={faUserFriends}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row d-flex\">\r\n              <div className=\"col-lg-6\">\r\n                <InputLabeled\r\n                  label=\"Marka samochodu\"\r\n                  name=\"carBrand\"\r\n                  handleChange={(e) =>\r\n                    setTeam({\r\n                      ...team,\r\n                      currentCar: { ...team.currentCar, brand: e.target.value },\r\n                    })\r\n                  }\r\n                  value={team.currentCar?.brand}\r\n                  big={true}\r\n                  required={true}\r\n                  icon={faCar}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <InputLabeled\r\n                  label=\"Model samochodu\"\r\n                  name=\"carModel\"\r\n                  handleChange={(e) =>\r\n                    setTeam({\r\n                      ...team,\r\n                      currentCar: { ...team.currentCar, model: e.target.value },\r\n                    })\r\n                  }\r\n                  value={team.currentCar?.model}\r\n                  big={true}\r\n                  required={true}\r\n                  icon={faCarAlt}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row d-flex\">\r\n              <div className=\"col-lg-6\">\r\n                <InputLabeled\r\n                  label=\"Pojemność silnika [cm3]\"\r\n                  name=\"engineCapacity\"\r\n                  handleChange={(e) =>\r\n                    setTeam({\r\n                      ...team,\r\n                      currentCar: {\r\n                        ...team.currentCar,\r\n                        engineCapacity: e.target.value,\r\n                      },\r\n                    })\r\n                  }\r\n                  value={team.currentCar?.engineCapacity}\r\n                  big={true}\r\n                  required={true}\r\n                  onlyNumber={true}\r\n                />\r\n              </div>\r\n              <div className=\"col-lg-6\">\r\n                <Selector\r\n                  label={\"Rodzaj napędu\"}\r\n                  options={options?.driveTypeOption}\r\n                  handleChange={(value) =>\r\n                    setTeam({\r\n                      ...team,\r\n                      currentCar: {\r\n                        ...team.currentCar,\r\n                        driveType: value,\r\n                      },\r\n                    })\r\n                  }\r\n                  value={team.currentCar?.driveType}\r\n                  isValid={true}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-center\">\r\n              <Form>\r\n                <span className={\"py-0 mb-2 mt-1 mx-1 input-group-text\"}>\r\n                  Turbo\r\n                </span>\r\n                <Form.Check\r\n                  inline\r\n                  label=\"TAK\"\r\n                  name=\"turbo\"\r\n                  type={\"radio\"}\r\n                  id={`inline-1`}\r\n                  checked={team.currentCar?.turbo}\r\n                  onClick={() =>\r\n                    setTeam({\r\n                      ...team,\r\n                      currentCar: { ...team.currentCar, turbo: true },\r\n                    })\r\n                  }\r\n                />\r\n                <Form.Check\r\n                  inline\r\n                  label=\"NIE\"\r\n                  name=\"turbo\"\r\n                  type={\"radio\"}\r\n                  id={`inline-2`}\r\n                  checked={!team.currentCar?.turbo}\r\n                  onClick={() =>\r\n                    setTeam({\r\n                      ...team,\r\n                      currentCar: { ...team.currentCar, turbo: false },\r\n                    })\r\n                  }\r\n                />\r\n              </Form>\r\n            </div>\r\n            <div className=\"text-center\" style={{ height: \"50px\" }}>\r\n              {loading && (\r\n                <Spinner animation=\"border\" variant=\"secondary\" size=\"lg\" />\r\n              )}\r\n            </div>\r\n            <Button className={\"m-1\"} variant=\"success\" type=\"submit\">\r\n              {okBtnLabel}\r\n            </Button>\r\n            <Button\r\n              className={\"m-1\"}\r\n              variant=\"secondary\"\r\n              onClick={() => handleClose()}\r\n            >\r\n              Anuluj\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Modal.Body>\r\n    </Modal>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  backendUrl,\r\n  fetchConfirmEntryFee,\r\n  fetchRemoveFromEvent,\r\n  fetchSaveTeam,\r\n} from \"../utils/fetchUtils\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faClipboard,\r\n  faCoins,\r\n  faDollarSign,\r\n  faDownload,\r\n  faExclamation,\r\n  faTimesCircle,\r\n  faUserEdit,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { OkCancelModal } from \"../common/Modal\";\r\nimport authHeader from \"../../service/auth-header\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { Selector } from \"../common/Selector\";\r\nimport { BasicTeamDataForm } from \"./BasicTeamDataForm\";\r\nimport { TeamModal } from \"./TeamModal\";\r\nimport { QuickJoinPanel } from \"../join/QuickJoinPanel\";\r\nimport { download } from \"../utils/fileUtils\";\r\n\r\nexport const AdminTeamList = ({\r\n  show,\r\n  handleClose,\r\n  eventId,\r\n  eventName,\r\n  started,\r\n}) => {\r\n  const [teams, setTeams] = useState([]);\r\n  const [startEvent, setStartEvent] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [referee, setReferee] = useState(false);\r\n  const [refreshSelect, setRefreshSelect] = useState(false);\r\n  const [teamToRemove, setTeamToRemove] = useState({\r\n    driver: null,\r\n    teamId: null,\r\n  });\r\n  const [teamToEntryFee, setTeamToEntryFee] = useState({\r\n    driver: null,\r\n    teamId: null,\r\n  });\r\n  const [msg, setMsg] = useState();\r\n  const [eventClasses, setEventClasses] = useState([]);\r\n  const [teamToEdit, setTeamToEdit] = useState();\r\n  const [teamToPreview, setTeamToPreview] = useState();\r\n  const [quickJoin, setQuickJoin] = useState();\r\n  const [doSort, setDoSort] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (show) {\r\n      fetchReferee();\r\n      setLoading(true);\r\n      setTeams([]);\r\n      fetchEvent();\r\n    }\r\n    fetchTeams();\r\n  }, [show]);\r\n\r\n  const eraseTeamToRemove = () => {\r\n    setTeamToRemove({\r\n      driver: null,\r\n      teamId: null,\r\n    });\r\n  };\r\n\r\n  const eraseTeamToEntryFee = () => {\r\n    setTeamToEntryFee({\r\n      driver: null,\r\n      teamId: null,\r\n    });\r\n  };\r\n\r\n  const getDriverAndTeamId = (team) => {\r\n    return {\r\n      teamId: team.teamId,\r\n      driver: team.driver + \" / \" + team.coDriver,\r\n    };\r\n  };\r\n\r\n  const fetchTeams = () => {\r\n    if (eventId === undefined) return;\r\n    axios\r\n      .get(`${backendUrl()}/event/getTeams?eventId=${eventId}`)\r\n      .then((res) => {\r\n        setTeams(res.data.sort((a, b) => a.order - b.order));\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const fetchEvent = () => {\r\n    axios\r\n      .get(`${backendUrl()}/event/getEvent?eventId=${eventId}`)\r\n      .then((res) => {\r\n        setEventClasses(\r\n          res.data.eventClasses.map((x) => {\r\n            return { ...x, value: x.carClassId, label: x.carClass.name };\r\n          })\r\n        );\r\n      });\r\n  };\r\n\r\n  const fetchEntryFeeFile = (teamId, teamName) => {\r\n    download(\r\n      `${backendUrl()}/event/getEntryFeeFile?eventId=${eventId}&teamId=${teamId}`,\r\n      \"potwierdzenie_wplaty_\" + teamName + \".pdf\"\r\n    );\r\n  };\r\n\r\n  const fetchOaDocuments = () => {\r\n    download(\r\n      `${backendUrl()}/file/getEventTeamsData?eventId=${eventId}`,\r\n      \"dokumenty_oa_\" + eventName + \".pdf\"\r\n    );\r\n  };\r\n\r\n  const fetchBkDocuments = () => {\r\n    download(\r\n      `${backendUrl()}/file/getBkFiles?eventId=${eventId}`,\r\n      \"dokumenty_bk_\" + eventName + \".pdf\"\r\n    );\r\n  };\r\n  const fetchReferee = () => {\r\n    axios\r\n      .get(`${backendUrl()}/event/checkReferee?eventId=${eventId}`, {\r\n        headers: authHeader(),\r\n      })\r\n      .then((res) => {\r\n        setReferee(res.data);\r\n      });\r\n  };\r\n\r\n  const fetchStartEvent = () => {\r\n    axios\r\n      .post(`${backendUrl()}/event/startEvent?eventId=${eventId}`, {\r\n        headers: authHeader(),\r\n      })\r\n      .then(() => {});\r\n  };\r\n\r\n  const sortByClass = () => {\r\n    setRefreshSelect(true);\r\n    axios\r\n      .post(`${backendUrl()}/event/sortByClass`, teams, {\r\n        headers: authHeader(),\r\n      })\r\n      .then((res) => {\r\n        setTeams(res.data);\r\n        setRefreshSelect(false);\r\n      });\r\n  };\r\n\r\n  const saveNumbersAndClasses = () => {\r\n    axios\r\n      .post(\r\n        `${backendUrl()}/event/saveNumbersAndClasses?eventId=${eventId}`,\r\n        teams,\r\n        {\r\n          headers: authHeader(),\r\n        }\r\n      )\r\n      .then((res) => {\r\n        if (res.data) setMsg(\"Kolejność i klasy zostały zapisane\");\r\n        else setMsg(\"Coś poszło nie tak\");\r\n\r\n        setTimeout(() => setMsg(), 5000);\r\n      });\r\n  };\r\n\r\n  const handleOnDragEnd = (result) => {\r\n    if (!result.destination) return;\r\n\r\n    const items = Array.from(teams);\r\n    const [reorderedItem] = items.splice(result.source.index, 1);\r\n    items.splice(result.destination.index, 0, reorderedItem);\r\n\r\n    let order = 1;\r\n    items.map((x) => (x.order = order++));\r\n\r\n    setTeams(getOrdered(items));\r\n    setRefreshSelect(false);\r\n  };\r\n\r\n  const changeCarClass = (id, newCarClassId) => {\r\n    const index = teams.findIndex((x) => x.id === id);\r\n\r\n    if (teams[index].carClassId === newCarClassId) return;\r\n    teams[index].carClassId = newCarClassId;\r\n    setTeams(teams);\r\n  };\r\n\r\n  const saveTeam = (team) => {\r\n    setLoading(true);\r\n    fetchSaveTeam(team, () => {\r\n      fetchTeams();\r\n      setTeamToEdit();\r\n    });\r\n  };\r\n\r\n  const numberChanged = (value, item) => {\r\n    setSortedTeam(item, value !== \"\" ? Number(value) : \" \");\r\n  };\r\n\r\n  const checkRepeated = (value, item) => {\r\n    const numValue = Number(value);\r\n    if (\r\n      teams.find(\r\n        (x) => x.id !== item.id && x.forcedNumber && x.number === numValue\r\n      )\r\n    )\r\n      setSortedTeam(item, \"\");\r\n    // else setSortedTeam(item, Number(value));\r\n  };\r\n\r\n  const setSortedTeam = (item, numValue) => {\r\n    const tempTeams = teams.filter((x) => x.id !== item.id);\r\n    item.number = numValue;\r\n    item.forcedNumber = numValue !== \"\";\r\n\r\n    tempTeams.push(item);\r\n    tempTeams.sort((a, b) => a.order - b.order);\r\n\r\n    setTeams(getOrdered(tempTeams));\r\n  };\r\n\r\n  const getOrdered = (tempTeams) => {\r\n    const newTeams = [];\r\n    const forcedNumbers = teams\r\n      .filter((x) => x.forcedNumber)\r\n      .map((x) => x.number);\r\n    let index = 1;\r\n\r\n    for (let i in tempTeams) {\r\n      let item = tempTeams[i];\r\n      if (item.forcedNumber) {\r\n        newTeams.push(item);\r\n        continue;\r\n      }\r\n      if (!item.forcedNumber && !forcedNumbers.includes(index))\r\n        item.number = index++;\r\n      else {\r\n        while (forcedNumbers.includes(index)) index++;\r\n        item.number = index++;\r\n      }\r\n      newTeams.push(item);\r\n    }\r\n    return newTeams;\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      style={{ zIndex: teamToEdit || teamToPreview || quickJoin ? 1000 : 1055 }}\r\n      show={show}\r\n      onHide={handleClose}\r\n      backdrop=\"static\"\r\n      keyboard={false}\r\n      size=\"xl\"\r\n    >\r\n      <Modal.Header className=\"bg-dark text-white\" closeButton>\r\n        <Modal.Title>Lista zapisanych</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        {loading && (\r\n          <div className=\"text-center\">\r\n            <Spinner animation=\"border\" variant=\"secondary\" size=\"lg\" />\r\n          </div>\r\n        )}\r\n        {!loading && teams.length === 0 && (\r\n          <h1 className=\"text-center\">Brak zgłoszeń</h1>\r\n        )}\r\n        {!loading && teams?.length > 0 && (\r\n          <>\r\n            <table>\r\n              <th className=\"\">\r\n                <td style={{ width: \"70px\" }}>Edycja</td>\r\n                <td style={{ width: \"60px\" }}>Nr</td>\r\n                <td style={{ width: \"350px\" }}>Kierowca</td>\r\n                <td style={{ width: \"350px\" }}>Samochód</td>\r\n                <td style={{ width: \"100px\" }}>Klasa</td>\r\n                <td style={{ width: \"100px\" }}>Zapłacone</td>\r\n                <td style={{ width: \"110px\" }}>Potwierdź wpisowe</td>\r\n                <td style={{ width: \"100px\" }}>Plik</td>\r\n                <td style={{ width: \"80px\" }}>OA</td>\r\n                <td style={{ width: \"80px\" }}>Usuń załogę</td>\r\n              </th>\r\n            </table>\r\n            <div style={{ overflowX: \"scroll\" }}>\r\n              <DragDropContext\r\n                onDragStart={() => setRefreshSelect(true)}\r\n                onDragEnd={handleOnDragEnd}\r\n              >\r\n                <Droppable droppableId=\"selectedCases\">\r\n                  {(provided) => (\r\n                    <ol\r\n                      className=\"selectedCases fw-bold\"\r\n                      style={{ minWidth: \"600px\" }}\r\n                      {...provided.droppableProps}\r\n                      ref={provided.innerRef}\r\n                    >\r\n                      {teams?.map((item, index) => {\r\n                        return (\r\n                          <Draggable\r\n                            key={item.order}\r\n                            draggableId={item.order.toString()}\r\n                            index={index}\r\n                            draggable={true}\r\n                          >\r\n                            {(provided) => (\r\n                              <li\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                {...provided.dragHandleProps}\r\n                              >\r\n                                <Card className=\"my-1\">\r\n                                  <Card.Body className=\"p-0\">\r\n                                    <table className=\"m-0\">\r\n                                      <th className=\"d-table-row fw-normal align-middle\">\r\n                                        <td\r\n                                          className={\r\n                                            item.teamChecked &&\r\n                                            item.entryFeePaid\r\n                                              ? \"bg-success\"\r\n                                              : \"\"\r\n                                          }\r\n                                          style={{ width: \"20px\" }}\r\n                                        >\r\n                                          <FontAwesomeIcon\r\n                                            icon={faUserEdit}\r\n                                            onClick={() =>\r\n                                              setTeamToEdit(item.team)\r\n                                            }\r\n                                            title={\"Edytuj dane\"}\r\n                                            cursor={\"pointer\"}\r\n                                          />\r\n                                        </td>\r\n                                        <td style={{ width: \"55px\" }}>\r\n                                          {/* <NrBadge value={item.number}></NrBadge> */}\r\n                                          <input\r\n                                            style={{\r\n                                              width: \"90%\",\r\n                                              backgroundColor: \"#ffad4f\",\r\n                                              fontWeight: item.forcedNumber\r\n                                                ? \"700\"\r\n                                                : \"100\",\r\n                                              borderRadius: \"20px\",\r\n                                              textAlign: \"center\",\r\n                                            }}\r\n                                            type=\"number\"\r\n                                            value={item.number}\r\n                                            onChange={(e) =>\r\n                                              numberChanged(\r\n                                                e.target.value,\r\n                                                item\r\n                                              )\r\n                                            }\r\n                                            onBlur={(e) =>\r\n                                              checkRepeated(\r\n                                                e.target.value,\r\n                                                item\r\n                                              )\r\n                                            }\r\n                                          />\r\n                                        </td>\r\n                                        <td style={{ width: \"270px\" }}>\r\n                                          {item.team.driver +\r\n                                            (item.team?.coDriver === null ||\r\n                                            item.team.coDriver === \"\"\r\n                                              ? \"\"\r\n                                              : \" / \" + item.team?.coDriver)}\r\n                                        </td>\r\n                                        <td style={{ width: \"270px\" }}>\r\n                                          {(item.team.currentCar?.brand || \"\") +\r\n                                            \" \" +\r\n                                            (item.team.currentCar?.model || \"\")}\r\n                                        </td>\r\n                                        <td\r\n                                          style={{\r\n                                            width: \"100px\",\r\n                                            display: \"flex\",\r\n                                          }}\r\n                                        >\r\n                                          {item.carClassId}\r\n                                          {!refreshSelect && (\r\n                                            <Selector\r\n                                              className={\"m-0 p-0\"}\r\n                                              options={eventClasses}\r\n                                              handleChange={(value) => {\r\n                                                changeCarClass(item.id, value);\r\n                                              }}\r\n                                              isValid={true}\r\n                                              value={item.carClassId}\r\n                                            />\r\n                                          )}\r\n                                          {refreshSelect && (\r\n                                            <Selector\r\n                                              className={\"m-0 p-0\"}\r\n                                              options={eventClasses}\r\n                                              handleChange={(value) => {\r\n                                                changeCarClass(item.id, value);\r\n                                              }}\r\n                                              isValid={true}\r\n                                              skipDefault={true}\r\n                                            />\r\n                                          )}\r\n                                        </td>\r\n                                        <td\r\n                                          style={{\r\n                                            width: \"90px\",\r\n                                            textAlign: \"center\",\r\n                                          }}\r\n                                        >\r\n                                          {item.entryFeePaid ? (\r\n                                            <FontAwesomeIcon\r\n                                              className={\"text-success\"}\r\n                                              icon={faDollarSign}\r\n                                            />\r\n                                          ) : (\r\n                                            <FontAwesomeIcon\r\n                                              className={\"text-danger\"}\r\n                                              icon={faExclamation}\r\n                                            />\r\n                                          )}\r\n                                        </td>\r\n                                        <td style={{ width: \"90px\" }}>\r\n                                          <FontAwesomeIcon\r\n                                            icon={faCoins}\r\n                                            onClick={() =>\r\n                                              setTeamToEntryFee(\r\n                                                getDriverAndTeamId(item.team)\r\n                                              )\r\n                                            }\r\n                                            title={\"Potwierdź wpisowe\"}\r\n                                            cursor={\"pointer\"}\r\n                                          />\r\n                                        </td>\r\n                                        <td style={{ width: \"90px\" }}>\r\n                                          {item.entryFeeFile !== null ? (\r\n                                            <FontAwesomeIcon\r\n                                              icon={faDownload}\r\n                                              onClick={() =>\r\n                                                fetchEntryFeeFile(\r\n                                                  item.team.teamId,\r\n                                                  item.team.driver\r\n                                                )\r\n                                              }\r\n                                              title={\"Pobierz plik\"}\r\n                                              cursor={\"pointer\"}\r\n                                            />\r\n                                          ) : (\r\n                                            <></>\r\n                                          )}\r\n                                        </td>\r\n                                        <td style={{ width: \"80px\" }}>\r\n                                          {item.teamChecked ? (\r\n                                            <FontAwesomeIcon\r\n                                              className={\"text-success\"}\r\n                                              icon={faClipboard}\r\n                                              onClick={() =>\r\n                                                setTeamToPreview(\r\n                                                  item.team.teamId\r\n                                                )\r\n                                              }\r\n                                              title={\"Podgląd danych\"}\r\n                                              cursor={\"pointer\"}\r\n                                            />\r\n                                          ) : (\r\n                                            <FontAwesomeIcon\r\n                                              icon={faClipboard}\r\n                                              onClick={() =>\r\n                                                setTeamToPreview(\r\n                                                  item.team.teamId\r\n                                                )\r\n                                              }\r\n                                              title={\"Podgląd danych\"}\r\n                                              cursor={\"pointer\"}\r\n                                            />\r\n                                          )}\r\n                                        </td>\r\n                                        <td\r\n                                          style={{\r\n                                            width: \"60px\",\r\n                                            color: \"red\",\r\n                                          }}\r\n                                        >\r\n                                          <FontAwesomeIcon\r\n                                            icon={faTimesCircle}\r\n                                            onClick={() =>\r\n                                              setTeamToRemove(\r\n                                                getDriverAndTeamId(item.team)\r\n                                              )\r\n                                            }\r\n                                            title={\"Usuń załoge\"}\r\n                                            cursor={\"pointer\"}\r\n                                          />\r\n                                        </td>\r\n                                      </th>\r\n                                    </table>\r\n                                  </Card.Body>\r\n                                </Card>\r\n                              </li>\r\n                            )}\r\n                          </Draggable>\r\n                        );\r\n                      })}\r\n                      {provided.placeholder}\r\n                    </ol>\r\n                  )}\r\n                </Droppable>\r\n              </DragDropContext>\r\n            </div>\r\n          </>\r\n        )}\r\n        {teamToRemove.teamId !== null && (\r\n          <OkCancelModal\r\n            show={true}\r\n            title={\"Usuwanie załogi\"}\r\n            text={`Czy napewno chcesz usunąć załoge: ${teamToRemove.driver}`}\r\n            handleAccept={() => {\r\n              fetchRemoveFromEvent(eventId, teamToRemove.teamId, () =>\r\n                fetchTeams()\r\n              );\r\n              eraseTeamToRemove();\r\n            }}\r\n            handleClose={() => {\r\n              eraseTeamToRemove();\r\n            }}\r\n          />\r\n        )}\r\n        {teamToEntryFee.teamId !== null && (\r\n          <OkCancelModal\r\n            show={true}\r\n            title={\"Potwierdzanie wpisowego\"}\r\n            text={`Czy napewno chcesz potwierdzić wpłatę wpisowego przez załoge: ${teamToEntryFee.driver}`}\r\n            handleAccept={() => {\r\n              fetchConfirmEntryFee(eventId, teamToEntryFee.teamId, () =>\r\n                fetchTeams()\r\n              );\r\n              eraseTeamToEntryFee();\r\n            }}\r\n            handleClose={() => {\r\n              eraseTeamToEntryFee();\r\n            }}\r\n          />\r\n        )}\r\n        {startEvent && (\r\n          <OkCancelModal\r\n            show={true}\r\n            title={\"Zamykanie listy / Rozpoczynanie wydarzenia\"}\r\n            text={`Czy napewno chcesz zamknąć listę i rozpocząć wydarzenie? Operacja nieodwracalna`}\r\n            handleAccept={() => {\r\n              fetchStartEvent();\r\n              setStartEvent(false);\r\n            }}\r\n            handleClose={() => setStartEvent(false)}\r\n          />\r\n        )}\r\n        {teamToEdit && (\r\n          <BasicTeamDataForm\r\n            show={true}\r\n            myTeam={teamToEdit}\r\n            eventId={eventId}\r\n            onSave={(team) => saveTeam(team)}\r\n            okBtnLabel={\"Zapisz zmiany\"}\r\n            handleClose={() => setTeamToEdit()}\r\n            title={\"Edycja danych załogi\"}\r\n          />\r\n        )}\r\n        {doSort && (\r\n          <OkCancelModal\r\n            show={true}\r\n            title={\"Sortowanie\"}\r\n            text={`Czy chcesz posortować zawodników? Pamiętaj, że zresetuje to numery które nie zostały wpisane ręcznie (nie-pogrubione). Jeśli chcesz nadać komuś numer na stałe edytuj wartość na liście.`}\r\n            handleAccept={() => {\r\n              sortByClass();\r\n              setDoSort(false);\r\n            }}\r\n            handleClose={() => setDoSort(false)}\r\n          />\r\n        )}\r\n        {teamToPreview && (\r\n          <TeamModal\r\n            show={true}\r\n            handleClose={() => {\r\n              fetchTeams();\r\n              setTeamToPreview();\r\n            }}\r\n            myEvent={{\r\n              eventId: eventId,\r\n              started: false,\r\n              teamId: teamToPreview,\r\n            }}\r\n            mode=\"preview\"\r\n          />\r\n        )}\r\n        <QuickJoinPanel\r\n          show={quickJoin}\r\n          handleClose={() => {\r\n            fetchTeams();\r\n            setQuickJoin();\r\n          }}\r\n          eventId={eventId}\r\n        />\r\n        <div className=\"text-center\">\r\n          <Button\r\n            className={\"m-1\"}\r\n            variant=\"primary\"\r\n            onClick={() => setDoSort(true)}\r\n          >\r\n            Sortuj wstępnie wg. klas\r\n          </Button>\r\n          <Button\r\n            className={\"m-1\"}\r\n            variant=\"primary\"\r\n            onClick={() => fetchOaDocuments()}\r\n          >\r\n            Pobierz dokumenty OA\r\n          </Button>{\" \"}\r\n          <Button\r\n            className={\"m-1\"}\r\n            variant=\"primary\"\r\n            onClick={() => fetchBkDocuments()}\r\n          >\r\n            Pobierz dokumenty BK\r\n          </Button>\r\n          <p>{msg}</p>\r\n        </div>\r\n      </Modal.Body>\r\n      <Modal.Footer className={\"justify-content-center\"}>\r\n        <div className=\"d-flex\">\r\n          {referee && (\r\n            <Button\r\n              className={\"m-2\"}\r\n              variant=\"success\"\r\n              onClick={() => setQuickJoin(true)}\r\n            >\r\n              Dodaj zawodnika\r\n            </Button>\r\n          )}\r\n          {/* {referee && (\r\n            <Button\r\n              className={\"m-2\"}\r\n              variant=\"success\"\r\n              onClick={() => setStartEvent(true)}\r\n              disabled={started}\r\n            >\r\n              Zamknij liste / Rozpocznij wydarzenie\r\n            </Button>\r\n          )} */}\r\n          <Button\r\n            className={\"m-2\"}\r\n            variant=\"success\"\r\n            onClick={saveNumbersAndClasses}\r\n          >\r\n            Zapisz klasy i kolejność załóg\r\n          </Button>\r\n          <Button className={\"m-2\"} variant=\"secondary\" onClick={handleClose}>\r\n            Wyjdź\r\n          </Button>\r\n        </div>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n","/* eslint-disable react/display-name */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { backendUrl, checkReferee } from \"../utils/fetchUtils\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { NewEventForm } from \"../event/NewEventForm\";\r\nimport { EventCard } from \"../common/EventCard\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport { TeamListModal } from \"../team/TeamListModal\";\r\nimport { EventModal } from \"../event/EventModal\";\r\nimport authHeader from \"../../service/auth-header\";\r\nimport { AdminTeamList } from \"../team/AdminTeamList\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst HomePage = (props) => {\r\n  const [futureEvents, setFutureEvents] = useState([]);\r\n  const [archiveEvents, setArchiveEvents] = useState([]);\r\n  const [createEvent, setCreateEvent] = useState();\r\n  const [eventToTeamList, setEventToTeamList] = useState();\r\n  const [eventToTeamPanel, setEventToTeamPanel] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [mainAdmin, setMainAdmin] = useState(false);\r\n  const [redirected, setRedirected] = useState(false);\r\n\r\n  let eventRedirect = useLocation().search;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const fetchEvents = () => {\r\n    setLoading(true);\r\n\r\n    let endDay = new Date();\r\n    endDay.setHours(23, 59, 59, 999);\r\n    endDay.setDate(new Date().getDate() - 1);\r\n\r\n    axios\r\n      .get(`${backendUrl()}/event/getAll`, {\r\n        headers: authHeader(),\r\n      })\r\n      .then((res) => {\r\n        setFutureEvents(\r\n          res.data\r\n            .filter((x) => endDay.getTime() <= new Date(x.date).getTime())\r\n            .sort((x, y) => (x.date < y.date ? -1 : 1))\r\n        );\r\n        setArchiveEvents(\r\n          res.data\r\n            .filter((x) => endDay.getTime() > new Date(x.date).getTime())\r\n            .sort((x, y) => (x.date > y.date ? -1 : 1))\r\n        );\r\n        if (eventRedirect !== undefined && !redirected) {\r\n          const event = res.data.find(\r\n            (x) => x.eventId === Number(eventRedirect.replace(\"?\", \"\"))\r\n          );\r\n          setEventToTeamPanel(event);\r\n          eventRedirect = null;\r\n          setRedirected(true);\r\n        }\r\n        setLoading(false);\r\n      });\r\n  };\r\n\r\n  const fetchMainAdmin = () => {\r\n    if (sessionStorage.getItem(\"username\") !== null)\r\n      axios\r\n        .get(\r\n          `${backendUrl()}/auth/isMainAdmin?login=${sessionStorage.getItem(\r\n            \"username\"\r\n          )}`,\r\n          {\r\n            headers: authHeader(),\r\n          }\r\n        )\r\n        .then((res) => {\r\n          setMainAdmin(res.data);\r\n        });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchEvents();\r\n    fetchMainAdmin();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <p style={{ fontSize: \"11px\" }} className=\"my-0 py-0\">\r\n        Aplikacja w fazie testów\r\n      </p>\r\n      <Card className=\" my-1 bg-dark text-white\">\r\n        <h3>Najbliższe wydarzenia</h3>\r\n      </Card>\r\n      <div className=\"row justify-content-center\">\r\n        {loading && (\r\n          <div className=\"text-center\">\r\n            <Spinner animation=\"border\" variant=\"secondary\" size=\"lg\" />\r\n          </div>\r\n        )}\r\n        {futureEvents.map((x) => (\r\n          <EventCard\r\n            key={x.eventId}\r\n            event={x}\r\n            onJoin={() => setEventToTeamPanel(x)}\r\n            onScore={() => {\r\n              localStorage.setItem(\"eventId\", x.eventId);\r\n              navigate(\"event\", { state: { eventId: x.eventId } });\r\n            }}\r\n            onTeamList={() => {\r\n              checkReferee(x.eventId, setMainAdmin);\r\n              setEventToTeamList(x);\r\n            }}\r\n            onEdit={() => setCreateEvent(x)}\r\n            mainAdmin={mainAdmin}\r\n          />\r\n        ))}\r\n      </div>\r\n      <Card className=\"my-1 bg-dark text-white\">\r\n        <h3>Archiwalne wydarzenia</h3>\r\n      </Card>\r\n\r\n      <div className=\"row justify-content-center\">\r\n        {loading && (\r\n          <div className=\"text-center\">\r\n            <Spinner animation=\"border\" variant=\"secondary\" size=\"lg\" />\r\n          </div>\r\n        )}\r\n        {archiveEvents.map((x) => (\r\n          <EventCard\r\n            key={x.eventId}\r\n            event={x}\r\n            onJoin={() => setEventToTeamPanel(x)}\r\n            onScore={() => {\r\n              localStorage.setItem(\"eventId\", x.eventId);\r\n              navigate(\"event\", { state: { eventId: x.eventId } });\r\n            }}\r\n            onTeamList={() => setEventToTeamList(x)}\r\n            onEdit={() => setCreateEvent(x)}\r\n            mainAdmin={mainAdmin}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className=\"p-3 border-top\">\r\n        {mainAdmin && (\r\n          <Button\r\n            className={\"border-top mx-3\"}\r\n            variant=\"primary\"\r\n            onClick={() => setCreateEvent(true)}\r\n          >\r\n            Dodaj wydarzenie\r\n          </Button>\r\n        )}\r\n      </div>\r\n      <NewEventForm\r\n        show={createEvent !== undefined}\r\n        handleClose={() => {\r\n          setCreateEvent();\r\n          fetchEvents();\r\n        }}\r\n        event={createEvent}\r\n      />\r\n      {mainAdmin && (\r\n        <AdminTeamList\r\n          show={eventToTeamList !== undefined}\r\n          handleClose={() => {\r\n            setEventToTeamList();\r\n            fetchEvents();\r\n          }}\r\n          eventId={eventToTeamList?.eventId}\r\n          eventName={eventToTeamList?.name}\r\n          started={eventToTeamList?.started}\r\n        />\r\n      )}\r\n      {!mainAdmin && (\r\n        <TeamListModal\r\n          show={eventToTeamList !== undefined}\r\n          handleClose={() => {\r\n            setEventToTeamList();\r\n            fetchEvents();\r\n          }}\r\n          eventId={eventToTeamList?.eventId}\r\n          started={eventToTeamList?.started}\r\n        />\r\n      )}\r\n      <EventModal\r\n        show={eventToTeamPanel !== undefined}\r\n        handleClose={() => {\r\n          setEventToTeamPanel();\r\n          fetchEvents();\r\n        }}\r\n        event={eventToTeamPanel}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["NewEventForm","show","handleClose","event","useState","name","description","date","Date","signDeadline","admin","stages","organizer","logoPath","awdClassification","rwdClassification","fwdClassification","myEvent","setMyEvent","index","distance","startTime","startFrequency","stage","setStage","carClassId","carClassName","maxEngineCapacity","eventId","awd","eventClass","setEventClass","eventPaths","setEventPaths","path","setPath","eventFiles","setEventFiles","file","fileName","setFile","logoFile","setLogoFile","setStages","referee","setReferee","refereeOptions","setRefereeOptions","eventClasses","setEventClasses","eventClassesOptions","setEventClassesOptions","removeEvent","setRemoveEvent","useEffect","axios","backendUrl","headers","authHeader","then","res","data","undefined","fetchEventToEdit","handleChange","target","value","handleStageChange","map","x","carClass","DatePickerContainer","className","children","CalendarContainer","style","display","Modal","onHide","backdrop","keyboard","size","closeButton","Card","InputLabeled","label","big","multiline","inputPlaceholder","onChange","selected","calendarContainer","minDate","maxDate","Selector","options","id","tempRef","find","newRef","userId","Number","username","isValid","skipDefault","Table","responsive","key","icon","faTimesCircle","onClick","filter","title","cursor","tempClass","e","Button","variant","push","Form","inline","type","checked","accept","currentFile","files","formData","FormData","append","addLogoFile","length","format","tempStages","onlyNumber","elem","disabled","link","fileId","addFile","text","handleAccept","forEach","f","console","log","EventCard","onJoin","onTeamList","onScore","onEdit","mainAdmin","eventDeadlined","getTime","faEdit","moment","width","logoPathFile","src","alt","joined","faStar","TeamListModal","started","teams","setTeams","loading","setLoading","fetchTeams","columns","useMemo","Header","accessor","cellInfo","number","disableFilters","Cell","row","NrBadge","team","currentCar","line1","brand","model","line2","original","carBrand","driveType","driveTypeEnum","engineCapacity","entryFeePaid","faCheck","faQuestion","color","fontSize","Spinner","animation","ResultTable","isLoading","isFooter","isHeader","manualPagination","QuickJoinPanel","msg","setMsg","setOptions","coSportLicense","sportLicense","birthDate","carId","year","licensePlate","vin","turbo","petrol","insurance","insuranceExpiryDate","carInspectionExpiryDate","setTeam","onSubmit","preventDefault","driver","required","faUserAstronaut","coDriver","faUserClock","club","faBuilding","coClub","faCar","faCarAlt","driveTypeOption","height","EventModal","navigate","useNavigate","uploading","setUploading","fileMsg","setFileMsg","notJoined","setNotJoined","quickJoin","setQuickJoin","activeTab","setActiveTab","fillTeam","setFillTeam","loggedUser","sessionStorage","getItem","fetchGetTeam","signDeadlined","teamId","status","catch","error","zIndex","Tabs","activeKey","onSelect","Tab","eventKey","whiteSpace","rel","href","download","downloadFile","fetchUpload","form","fetchRemoveFromEvent","TeamModal","handleOk","BasicTeamDataForm","myTeam","onSave","okBtnLabel","teamName","faUserFriends","AdminTeamList","eventName","startEvent","setStartEvent","refreshSelect","setRefreshSelect","teamToRemove","setTeamToRemove","teamToEntryFee","setTeamToEntryFee","teamToEdit","setTeamToEdit","teamToPreview","setTeamToPreview","doSort","setDoSort","fetchReferee","fetchEvent","eraseTeamToRemove","eraseTeamToEntryFee","getDriverAndTeamId","sort","a","b","order","changeCarClass","newCarClassId","findIndex","setSortedTeam","item","numValue","tempTeams","forcedNumber","getOrdered","newTeams","forcedNumbers","i","includes","overflowX","onDragStart","onDragEnd","result","destination","items","Array","from","reorderedItem","splice","source","droppableId","provided","minWidth","droppableProps","ref","innerRef","draggableId","toString","draggable","draggableProps","dragHandleProps","teamChecked","faUserEdit","backgroundColor","fontWeight","borderRadius","textAlign","numberChanged","onBlur","checkRepeated","faDollarSign","faExclamation","faCoins","entryFeeFile","faDownload","faClipboard","placeholder","fetchConfirmEntryFee","fetchSaveTeam","saveTeam","mode","setTimeout","props","futureEvents","setFutureEvents","archiveEvents","setArchiveEvents","createEvent","setCreateEvent","eventToTeamList","setEventToTeamList","eventToTeamPanel","setEventToTeamPanel","setMainAdmin","redirected","setRedirected","eventRedirect","useLocation","search","fetchEvents","endDay","setHours","setDate","getDate","y","replace","localStorage","setItem","state","checkReferee"],"sourceRoot":""}